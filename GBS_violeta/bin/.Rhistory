#randomization cluster 1####
library(data.table)
library(doParallel)
load("/home/viole/cluster.1.cpm.tmm.norm.rbc")
load("/home/viole/design.list")
rownames(cluster.1.cpm.tmm.norm.rbc)=cluster.1.cpm.tmm.norm.rbc[,1]
geneID=rownames(cluster.1.cpm.tmm.norm.rbc)
list.p.values.loop.1000=list()
cluster.1.cpm.tmm.norm.rbc=cluster.1.cpm.tmm.norm.rbc[,-c(1:2)]
group.list.RBC=as.data.frame(design.list$blindtreatment[-158])
colnames(group.list.RBC)=c("group")
setDT(group.list.RBC)
setDT(cluster.1.cpm.tmm.norm.rbc)
setnames(group.list.RBC, "group")
list.p.values.loop.1000 <- list()
list.mann.whitney.RBC=list()
for(i in 1:10){
print(i)
cluster.1.cpm.tmm.norm.rbc <- data.frame(unlist(sapply(cluster.1.cpm.tmm.norm.rbc, sample,simplify = TRUE)))
for (a in 1:nrow(cluster.1.cpm.tmm.norm.rbc)) {
counts.window.RBC=as.data.frame(t(cluster.1.cpm.tmm.norm.rbc[a,]))
colnames(counts.window.RBC)=c("V1")
out = wilcox.test(counts.window.RBC$V1~group.list.RBC$group)
out[8]=geneID[a]
list.mann.whitney.RBC[[a]]=out
}
df.RBC=as.data.frame(do.call(cbind, list.mann.whitney.RBC))
df.RBC=t(df.RBC)
df.RBC=as.data.frame(df.RBC)
p.values.RBC=df.RBC[,c(3,8)]
colnames(p.values.RBC)=c("p_value","window")
p.values.RBC[p.values.RBC=="NaN"]<-NA
p.values.RBC=na.omit(p.values.RBC, cols=c("p_value"))
list.p.values.loop.1000[[i]]=p.values.RBC
rm(df.RBC)
gc()
}
save(list.p.values.loop.1000,file="/home/viole/list.mann.w
save(list.p.values.loop.1000,file="/home/viole/list.mann.whitney.cluster.1.rda")
save(list.p.values.loop.1000,file="/home/viole/list.mann.whitney.cluster.1.rda")
save(list.p.values.loop.1000,file="/home/viole/list.mann.whitney.cluster.1.rda")
library(MEDIPS)
library("MEDIPS")
library(MEDIPS)
library(MEDIPs)
install.packages("MEDIPS")
library(MEDIPS)
q()
q()
library(stringr)
library(edgeR)
library(dplyr)
library(PLNmodels)
library(factoextra)
library(FactoMineR)
library(ade4)
library(gridExtra)
nind<-50
wind_nb<-c(300,200,100,50,50)
coverage<-c(1,5,10,20,50)
sd_cov<-c(1,1,1,2,5)
groups<-c('case','control')
p_groups<-list(c(0.8,0.6,0.5),c(0.1,0.3,0.5))
Mat<-matrix(nrow=1,ncol=nind)
Design<-list()
for(a in 1:length(groups)){
df_design<-data.frame(coverage=NA,sd_cov=NA,prob=NA,test=NA,wind_id=NA)
prob<-p_groups[[a]]
for(i in prob){
for(j in 1:length(wind_nb)){
cov<-ceiling(rnorm(wind_nb[j],coverage[j],sd_cov[j]))
cov[cov<0]<-0
ind<-list()
for(k in 1:nind){ind[[k]]<-rbinom(wind_nb[j],cov,i)}
ind<-do.call(cbind,ind)
Mat<-rbind(Mat,ind)
x<-data.frame(coverage=cov,sd_cov=sd_cov[j],prob=i,test=groups[[a]],wind_id=NA)
df_design<-rbind(df_design,x)
}
}
df_design$wind_id<-c('wind_0',paste0('wind',seq(1,sum(wind_nb)*length(prob),1)))
Design[[a]]<-df_design
for(a in 1:length(groups)){
df_design<-data.frame(coverage=NA,sd_cov=NA,prob=NA,test=NA,wind_id=NA)
prob<-p_groups[[a]]
for(i in prob){
for(j in 1:length(wind_nb)){
cov<-ceiling(rnorm(wind_nb[j],coverage[j],sd_cov[j]))
cov[cov<0]<-0
ind<-list()
for(k in 1:nind){ind[[k]]<-rbinom(wind_nb[j],cov,i)}
ind<-do.call(cbind,ind)
Mat<-rbind(Mat,ind)
x<-data.frame(coverage=cov,sd_cov=sd_cov[j],prob=i,test=groups[[a]],wind_id=NA)
df_design<-rbind(df_design,x)
}
}
df_design$wind_id<-c('wind_0',paste0('wind',seq(1,sum(wind_nb)*length(prob),1)))
Design[[a]]<-df_design
}
g
nind<-50
wind_nb<-c(300,200,100,50,50)
coverage<-c(1,5,10,20,50)
sd_cov<-c(1,1,1,2,5)
groups<-c('case','control')
p_groups<-list(c(0.8,0.6,0.5),c(0.1,0.3,0.5))
Mat<-matrix(nrow=1,ncol=nind)
Design<-list()
for(a in 1:length(groups)){
df_design<-data.frame(coverage=NA,sd_cov=NA,prob=NA,test=NA,wind_id=NA)
prob<-p_groups[[a]]
for(i in prob){
for(j in 1:length(wind_nb)){
cov<-ceiling(rnorm(wind_nb[j],coverage[j],sd_cov[j]))
cov[cov<0]<-0
ind<-list()
for(k in 1:nind){ind[[k]]<-rbinom(wind_nb[j],cov,i)}
ind<-do.call(cbind,ind)
Mat<-rbind(Mat,ind)
x<-data.frame(coverage=cov,sd_cov=sd_cov[j],prob=i,test=groups[[a]],wind_id=NA)
df_design<-rbind(df_design,x)
}
}
df_design$wind_id<-c('wind_0',paste0('wind',seq(1,sum(wind_nb)*length(prob),1)))
Design[[a]]<-df_design
}
Mat<-Mat[-1,]
Design<-do.call(rbind,Design)
Design<-Design[!is.na(Design$coverage),]
q()
library(stringr)
library(edgeR)
library(dplyr)
library(PLNmodels)
library(factoextra)
library(FactoMineR)
library(ade4)
library(gridExtra)
nind<-50
wind_nb<-c(300,200,100,50,50)
coverage<-c(1,5,10,20,50)
sd_cov<-c(1,1,1,2,5)
groups<-c('case','control')
p_groups<-list(c(0.8,0.6,0.5),c(0.1,0.3,0.5))
Mat<-matrix(nrow=1,ncol=nind)
Design<-list()
for(a in 1:length(groups)){
df_design<-data.frame(coverage=NA,sd_cov=NA,prob=NA,test=NA,wind_id=NA)
prob<-p_groups[[a]]
for(i in prob){
for(j in 1:length(wind_nb)){
cov<-ceiling(rnorm(wind_nb[j],coverage[j],sd_cov[j]))
cov[cov<0]<-0
ind<-list()
for(k in 1:nind){ind[[k]]<-rbinom(wind_nb[j],cov,i)}
ind<-do.call(cbind,ind)
Mat<-rbind(Mat,ind)
x<-data.frame(coverage=cov,sd_cov=sd_cov[j],prob=i,test=groups[[a]],wind_id=NA)
df_design<-rbind(df_design,x)
}
}
df_design$wind_id<-c('wind_0',paste0('wind',seq(1,sum(wind_nb)*length(prob),1)))
Design[[a]]<-df_design
}
View(Mat)
?rbinom
setwd("/proj/naiss2023-23-55/GBS_violeta/bin/")
q()
